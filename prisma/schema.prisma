generator client {
  provider = "prisma-client-js"
}

generator kysely {
  provider     = "prisma-kysely"
  output       = "../src/db"
  fileName     = "types.ts"
  enumFileName = "enums.ts"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  createdAt    DateTime      @default(now()) @db.Timestamptz()
  updatedAt    DateTime      @updatedAt @db.Timestamptz()
  name         String
  email        String        @unique
  password     String?
  provider     Provider
  verified     Boolean       @default(false)
  verification Verification?
  dividends    Dividend[]
}

model Verification {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @db.Timestamptz()
  updatedAt DateTime @updatedAt @db.Timestamptz()
  code      String   @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
}

model Dividend {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now()) @db.Timestamptz()
  updatedAt  DateTime @updatedAt @db.Timestamptz()
  dividendAt DateTime @db.Timestamptz()
  name       String
  unit       Unit
  dividend   Float
  tax        Float
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int
}

model Exchange {
  createdAt DateTime @default(now()) @db.Timestamptz()
  updatedAt DateTime @updatedAt @db.Timestamptz()
  date      String
  currency  Unit
  rate      Float

  @@id([date, currency])
}

enum Provider {
  LOCAL
  KAKAO
}

enum Unit {
  KRW
  USD
}
